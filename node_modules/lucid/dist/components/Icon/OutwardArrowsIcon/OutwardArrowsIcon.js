'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Icon = require('../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _styleHelpers = require('../../../util/style-helpers');

var _componentTypes = require('../../../util/component-types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var oneOf = _propTypes2.default.oneOf;


var cx = _styleHelpers.lucidClassNames.bind('&-OutwardArrowsIcon');

var paths = {
	horizontal: 'M13.8 7.6c.2.2.2.5 0 .7-1.3 1.2-3.4 2.8-3.4 2.8s-.4.2-.4-.1V9H6v2c0 .3-.4.1-.4.1s-2-1.6-3.4-2.8c-.2-.2-.2-.5 0-.7 1.3-1.2 3.4-2.8 3.4-2.8s.4-.1.4.2v2h4V5c0-.406.4-.1.4-.1s2 1.5 3.4 2.7zM.5 4c-.3 0-.5.2-.5.5v7c0 .3.2.5.5.5s.5-.2.5-.5v-7C1 4.2.8 4 .5 4zm15 0c-.3 0-.5.2-.5.5v7c0 .3.2.5.5.5s.5-.2.5-.5v-7c0-.3-.2-.5-.5-.5z',
	vertical: 'M8.4 13.8c-.2.2-.5.2-.7 0-1.2-1.3-2.8-3.4-2.8-3.4s-.2-.4.1-.4h2V6H5c-.3 0-.1-.4-.1-.4s1.6-2 2.8-3.4c.2-.2.5-.2.7 0 1.2 1.3 2.8 3.4 2.8 3.4s.1.4-.2.4H9v4h2c.3 0 .1.4.1.4s-1.5 2-2.7 3.4zM12 .5c0-.3-.2-.5-.5-.5h-7c-.3 0-.5.2-.5.5s.2.5.5.5h7c.3 0 .5-.2.5-.5zm0 15c0-.3-.2-.5-.5-.5h-7c-.3 0-.5.2-.5.5s.2.5.5.5h7c.3 0 .5-.2.5-.5z',
	diagonal: 'M12.4 12.9c-1.8-.1-4.3-.4-4.3-.4s-.4-.2-.2-.4l1.4-1.4-4-4c-.7.6-.7.7-1.5 1.4-.2.2-.3-.2-.3-.2s-.3-2.5-.4-4.3c0-.3.2-.5.5-.5 1.8.1 4.4.4 4.4.4s.3.2.1.4c-.7.7-.8.7-1.4 1.4l4 4 1.4-1.4c.2-.2.4.1.4.1s.3 2.6.4 4.4c0 .3-.2.5-.5.5zM8 .5c0-.3-.2-.5-.5-.5h-7C.2 0 0 .2 0 .5v7c0 .3.2.5.5.5s.5-.2.5-.5V1h6.5c.3 0 .5-.2.5-.5zM15.5 8c-.3 0-.5.2-.5.5V15H8.5c-.3 0-.5.2-.5.5s.2.5.5.5h7c.3 0 .5-.2.5-.5v-7c0-.3-.2-.5-.5-.5z'
};

/**
 *
 * {"categories": ["visual design", "icons"], "extend": "Icon", "madeFrom": ["Icon"]}
 *
 * Typically used to denote width, height, or aspect ratio.
 */
var OutwardArrowsIcon = (0, _componentTypes.createClass)({
	displayName: 'OutwardArrowsIcon',

	propTypes: _extends({
		/**
   * Determines the kind of arrows you want to display. `horizontal` is
   * usually used for width. `vertical` is usually used for height.
   * `diagonal` is usually used for aspect ratio.
   */
		kind: oneOf(['horizontal', 'vertical', 'diagonal'])
	}, _Icon2.default.propTypes),

	getDefaultProps: function getDefaultProps() {
		return {
			kind: 'horizontal'
		};
	},
	render: function render() {
		var _props = this.props,
		    className = _props.className,
		    kind = _props.kind,
		    passThroughs = _objectWithoutProperties(_props, ['className', 'kind']);

		return _react2.default.createElement(
			_Icon2.default,
			_extends({}, passThroughs, { className: cx('&', className) }),
			_react2.default.createElement('path', { d: paths[kind] })
		);
	}
});

exports.default = OutwardArrowsIcon;