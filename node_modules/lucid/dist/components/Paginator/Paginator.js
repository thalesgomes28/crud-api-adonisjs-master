'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.PaginatorDumb = undefined;

var _partial2 = require('lodash/partial');

var _partial3 = _interopRequireDefault(_partial2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _isNaN2 = require('lodash/isNaN');

var _isNaN3 = _interopRequireDefault(_isNaN2);

var _parseInt2 = require('lodash/parseInt');

var _parseInt3 = _interopRequireDefault(_parseInt2);

var _noop2 = require('lodash/noop');

var _noop3 = _interopRequireDefault(_noop2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styleHelpers = require('../../util/style-helpers');

var _componentTypes = require('../../util/component-types');

var _Paginator = require('./Paginator.reducers');

var reducers = _interopRequireWildcard(_Paginator);

var _Paginator2 = require('./Paginator.selectors');

var _Paginator3 = _interopRequireDefault(_Paginator2);

var _SingleSelect = require('../SingleSelect/SingleSelect');

var _TextField = require('../TextField/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _Button = require('../Button/Button');

var _Button2 = _interopRequireDefault(_Button);

var _ArrowIcon = require('../Icon/ArrowIcon/ArrowIcon');

var _ArrowIcon2 = _interopRequireDefault(_ArrowIcon);

var _stateManagement = require('../../util/state-management');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cx = _styleHelpers.lucidClassNames.bind('&-Paginator');

var arrayOf = _propTypes2.default.arrayOf,
    bool = _propTypes2.default.bool,
    func = _propTypes2.default.func,
    number = _propTypes2.default.number,
    object = _propTypes2.default.object,
    shape = _propTypes2.default.shape,
    string = _propTypes2.default.string;
var Option = _SingleSelect.SingleSelectDumb.Option;

/**
 *
 * {"categories": ["navigation"], "madeFrom": ["ArrowIcon", "TextField", "Button", "SingleSelect"]}
 *
 * A paginator with page size selector.
 */

var Paginator = (0, _componentTypes.createClass)({
	displayName: 'Paginator',

	reducers: reducers,

	selectors: _Paginator3.default,

	propTypes: {
		/**
   * Appended to the component-specific class names set on the root elements.
   */
		className: string,
		/**
   * Styles that are passed through to root element.
   */
		style: object,
		/**
   * Disables the Paginator from being clicked or focused.
   */
		isDisabled: bool,
		/**
   * Whether to show the page size selector. Defaults to false.
   */
		hasPageSizeSelector: bool,
		/**
   * 0-indexed currently selected page number
   */
		selectedPageIndex: number,
		/**
   * currently selected page size option index
   */
		selectedPageSizeIndex: number,
		/**
   * Object of SingleSelect props which are passed thru to the underlying
   * SingleSelect component for the page size selector.
   */
		SingleSelect: shape(_SingleSelect.SingleSelectDumb.propTypes),
		/**
   * number to display in `of ${totalPages}`, calculated from `totalPages` and
   * selected page size by default.
   */
		totalPages: number,
		/**
   * total number of items across all pages
   */
		totalCount: number,
		/**
   * array of numbers representing page size options
   */
		pageSizeOptions: arrayOf(number),
		/**
   * Object of TextField props which are passed thru to the underlying TextField component.
   */
		TextField: shape(_TextField2.default.propTypes),
		/**
   * Called when a page is selected.
   * Has the signature `(pageIndex, totalPages, {props, event}) => {}` where pageIndex is a number.
   */
		onPageSelect: func,
		/**
   * Called when a page size is selected.
   * Has the signature `(pageSizeIndex, {props, event}) => {}` where pageSizeIndex is a number.
   */
		onPageSizeSelect: func
	},

	getDefaultProps: function getDefaultProps() {
		return {
			hasPageSizeSelector: false,
			isDisabled: false,
			onPageSelect: _noop3.default,
			selectedPageIndex: 0,
			selectedPageSizeIndex: 0,
			totalCount: null,
			pageSizeOptions: [10, 50, 100],
			SingleSelect: _extends({}, _SingleSelect.SingleSelectDumb.getDefaultProps(), {
				selectedIndex: 0
			}),
			TextField: _TextField2.default.getDefaultProps()
		};
	},
	handleTextFieldChange: function handleTextFieldChange(pageNum, _ref) {
		var props = _ref.props,
		    event = _ref.event;
		var _props = this.props,
		    onPageSelect = _props.onPageSelect,
		    selectedPageIndex = _props.selectedPageIndex,
		    totalPages = _props.totalPages;

		var parsedPageNum = (0, _parseInt3.default)(pageNum);
		if ((0, _isNaN3.default)(parsedPageNum)) {
			return onPageSelect(selectedPageIndex, totalPages, { props: props, event: event });
		}
		return onPageSelect(parsedPageNum - 1, totalPages, { props: props, event: event });
	},
	render: function render() {
		var _props2 = this.props,
		    className = _props2.className,
		    hasPageSizeSelector = _props2.hasPageSizeSelector,
		    isDisabled = _props2.isDisabled,
		    onPageSelect = _props2.onPageSelect,
		    onPageSizeSelect = _props2.onPageSizeSelect,
		    pageSizeOptions = _props2.pageSizeOptions,
		    selectedPageIndex = _props2.selectedPageIndex,
		    selectedPageSizeIndex = _props2.selectedPageSizeIndex,
		    totalPages = _props2.totalPages,
		    style = _props2.style,
		    singleSelectProps = _props2.SingleSelect,
		    textFieldProps = _props2.TextField;


		return _react2.default.createElement(
			'div',
			{ style: style, className: cx('&', className) },
			hasPageSizeSelector ? _react2.default.createElement(
				'div',
				{ className: cx('&-page-size-container') },
				_react2.default.createElement(
					'span',
					{ className: cx('&-rows-per-page-label') },
					'Rows per page:'
				),
				_react2.default.createElement(
					_SingleSelect.SingleSelectDumb,
					_extends({}, singleSelectProps, {
						hasReset: false,
						isSelectionHighlighted: false,
						isDisabled: isDisabled,
						selectedIndex: selectedPageSizeIndex,
						onSelect: onPageSizeSelect
					}),
					(0, _map3.default)(pageSizeOptions, function (option) {
						return _react2.default.createElement(
							Option,
							{ key: option },
							option
						);
					})
				)
			) : null,
			_react2.default.createElement(
				_Button2.default,
				{
					onClick: (0, _partial3.default)(onPageSelect, selectedPageIndex - 1, totalPages),
					isDisabled: isDisabled || selectedPageIndex === 0,
					hasOnlyIcon: true
				},
				_react2.default.createElement(_ArrowIcon2.default, { direction: 'left' })
			),
			_react2.default.createElement(_TextField2.default, _extends({
				lazyLevel: 100
			}, textFieldProps, {
				onBlur: this.handleTextFieldChange,
				onSubmit: this.handleTextFieldChange,
				isDisabled: isDisabled,
				value: selectedPageIndex + 1
			})),
			_react2.default.createElement(
				'span',
				null,
				'of ',
				totalPages
			),
			_react2.default.createElement(
				_Button2.default,
				{
					onClick: (0, _partial3.default)(onPageSelect, selectedPageIndex + 1, totalPages),
					isDisabled: isDisabled || selectedPageIndex === totalPages - 1,
					hasOnlyIcon: true
				},
				_react2.default.createElement(_ArrowIcon2.default, { direction: 'right' })
			)
		);
	}
});

exports.default = (0, _stateManagement.buildHybridComponent)(Paginator);
exports.PaginatorDumb = Paginator;