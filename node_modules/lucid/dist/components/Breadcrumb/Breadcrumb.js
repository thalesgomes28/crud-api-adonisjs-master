'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _isEmpty2 = require('lodash/isEmpty');

var _isEmpty3 = _interopRequireDefault(_isEmpty2);

var _last2 = require('lodash/last');

var _last3 = _interopRequireDefault(_last2);

var _initial2 = require('lodash/initial');

var _initial3 = _interopRequireDefault(_initial2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styleHelpers = require('../../util/style-helpers');

var _componentTypes = require('../../util/component-types');

var _SeparatorIcon = require('../Icon/SeparatorIcon/SeparatorIcon');

var _SeparatorIcon2 = _interopRequireDefault(_SeparatorIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _styleHelpers.lucidClassNames.bind('&-Breadcrumb');

var any = _propTypes2.default.any,
    node = _propTypes2.default.node;

/**
 *
 * {"categories": ["navigation"], "madeFrom": ["SeparatorIcon"]}
 *
 * Navigation component to show a user's place in a navigation hierarchy and
 * provide links to return to higher points in the hierarchy
 *
 */

var Breadcrumb = (0, _componentTypes.createClass)({
	displayName: 'Breadcrumb',

	components: {
		SeparatorIcon: _SeparatorIcon2.default,
		/*
   * Renders a `li`
   */
		Item: (0, _componentTypes.createClass)({
			displayName: 'Breadcrumb.Item',
			propTypes: {
				children: node
			}
		})
	},

	propTypes: {
		/**
   * All children should be `Breadcrumb.Item`s. Others are ignored.
   */
		children: node,
		/**
   * Appended to the component-specific class names set on the root
   * element. Value is run through the `classnames` library.
   */
		className: any
	},

	render: function render() {
		var _props = this.props,
		    className = _props.className,
		    passThroughs = _objectWithoutProperties(_props, ['className']);

		var items = (0, _componentTypes.findTypes)(this.props, Breadcrumb.Item);
		var initialItems = (0, _initial3.default)(items);
		var lastItem = (0, _last3.default)(items);

		return _react2.default.createElement(
			'nav',
			_extends({}, (0, _componentTypes.omitProps)(passThroughs, Breadcrumb), {
				className: cx('&', className)
			}),
			!(0, _isEmpty3.default)(items) ? _react2.default.createElement(
				'ul',
				{ className: cx('&-List') },
				(0, _map3.default)(initialItems, function (_ref) {
					var props = _ref.props,
					    key = _ref.key;
					return _react2.default.createElement(
						'li',
						_extends({}, props, {
							key: key,
							className: cx('&-Item', props.className)
						}),
						props.children,
						_react2.default.createElement(_SeparatorIcon2.default, { className: cx('&-SeparatorIcon') })
					);
				}),
				_react2.default.createElement('li', _extends({}, lastItem.props, {
					key: lastItem.key,
					className: cx('&-Item', lastItem.props.className)
				}))
			) : null
		);
	}
});

exports.default = Breadcrumb;