'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.AccordionDumb = undefined;

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

var _noop2 = require('lodash/noop');

var _noop3 = _interopRequireDefault(_noop2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styleHelpers = require('../../util/style-helpers');

var _componentTypes = require('../../util/component-types');

var _stateManagement = require('../../util/state-management');

var _ExpanderPanel = require('../ExpanderPanel/ExpanderPanel');

var _Accordion = require('../Accordion/Accordion.reducers');

var reducers = _interopRequireWildcard(_Accordion);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _styleHelpers.lucidClassNames.bind('&-Accordion');

var any = _propTypes2.default.any,
    func = _propTypes2.default.func,
    object = _propTypes2.default.object,
    number = _propTypes2.default.number,
    string = _propTypes2.default.string;

/**
* {"categories": ["layout"], "madeFrom": ["ExpanderPanel"]}
*
* This is a container that renders panels and controls its expansion/retraction.
*/

var Accordion = (0, _componentTypes.createClass)({
	displayName: 'Accordion',

	components: {
		Item: _ExpanderPanel.ExpanderPanelDumb,
		Header: _ExpanderPanel.ExpanderPanelDumb.Header
	},

	reducers: reducers,

	propTypes: {
		/**
  * Appended to the component-specific class names set on the root
  * element.
  */
		className: string,

		/**
  * Indicates which item is expanded.
  */
		selectedIndex: number,

		/**
  * Called when the user clicks on the component's header of an item.
  *
  * Signature: `(itemIndex, { event, props }) => {}`
  */
		onSelect: func,

		/**
  * Passed through to the root element.
  */
		style: object,

		/**
   * prop alternative to Header child component
   * passed through to the underlying ExpanderPanel
   */
		Header: any
	},

	getDefaultProps: function getDefaultProps() {
		return {
			onSelect: _noop3.default
		};
	},
	handleToggle: function handleToggle(isExpanded, index, event) {
		var selectedIndex = isExpanded ? index : null;

		this.props.onSelect(selectedIndex, {
			event: event,
			props: this.props
		});
	},
	render: function render() {
		var _this = this;

		var _props = this.props,
		    style = _props.style,
		    className = _props.className,
		    selectedIndex = _props.selectedIndex,
		    passThroughs = _objectWithoutProperties(_props, ['style', 'className', 'selectedIndex']);

		var itemChildProps = (0, _map3.default)((0, _componentTypes.findTypes)(this.props, Accordion.Item), 'props');

		return _react2.default.createElement(
			'div',
			_extends({}, (0, _componentTypes.omitProps)(passThroughs, Accordion), {
				className: cx('&', className),
				style: style
			}),
			(0, _map3.default)(itemChildProps, function (itemChildProp, index) {
				return _react2.default.createElement(_ExpanderPanel.ExpanderPanelDumb, _extends({
					key: index
				}, itemChildProp, {
					className: cx('&-Item', itemChildProp.className),
					onToggle: function onToggle(isExpanded, _ref) {
						var event = _ref.event;
						return _this.handleToggle(isExpanded, index, event);
					},
					isExpanded: !itemChildProp.isDisabled && selectedIndex === index
				}));
			})
		);
	}
});

exports.default = (0, _stateManagement.buildHybridComponent)(Accordion);
exports.AccordionDumb = Accordion;