'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _isNull2 = require('lodash/isNull');

var _isNull3 = _interopRequireDefault(_isNull2);

var _get2 = require('lodash/get');

var _get3 = _interopRequireDefault(_get2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styleHelpers = require('../../util/style-helpers');

var _componentTypes = require('../../util/component-types');

var _LoadingIcon = require('../Icon/LoadingIcon/LoadingIcon');

var _LoadingIcon2 = _interopRequireDefault(_LoadingIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _styleHelpers.lucidClassNames.bind('&-LoadingMessage');

var any = _propTypes2.default.any,
    node = _propTypes2.default.node,
    string = _propTypes2.default.string;

/**
 *
 * {"categories": ["communication"], "madeFrom": ["LoadingIcon"]}
 *
 * A loading message.
 *
 */

var LoadingMessage = (0, _componentTypes.createClass)({
	displayName: 'LoadingMessage',
	_isPrivate: true,
	propTypes: {
		/**
   * Class names that are appended to the defaults.
   */
		className: string,
		/**
   * Any valid React children.
   */
		children: node,
		/**
   * Custom Icon element (alias for `LoadingMessage.Icon`)
   */
		Icon: any,
		/**
   * Custom Title element (alias for `LoadingMessage.Title`)
   */
		Title: any,
		/**
   * Custom Body element (alias for `LoadingMessage.Body`)
   */
		Body: any
	},

	components: {
		/**
   * Renders the `Icon` element passed in
   */
		Icon: (0, _componentTypes.createClass)({
			displayName: 'LoadingMessage.Icon',
			propName: 'Icon'
		}),
		/**
   * Renders an `<h3>` that represents the title of the `LoadingMessage`.
   * Defaults to the string "Loading".
   */
		Title: (0, _componentTypes.createClass)({
			displayName: 'LoadingMessage.Title',
			propName: 'Title'
		}),
		/**
   * Renders an `<span>` that represents the body of the `LoadingMessage`.
   */
		Body: (0, _componentTypes.createClass)({
			displayName: 'LoadingMessage.Body',
			propName: 'Body'
		})
	},

	render: function render() {
		var props = this.props,
		    _props = this.props,
		    className = _props.className,
		    passThroughs = _objectWithoutProperties(_props, ['className']);

		var Icon = LoadingMessage.Icon,
		    Title = LoadingMessage.Title,
		    Body = LoadingMessage.Body;


		var defaultTitle = 'Loading';
		var iconElement = (0, _componentTypes.getFirst)(props, Icon);
		var iconChildren = (0, _get3.default)(iconElement, 'props.children', _react2.default.createElement(_LoadingIcon2.default, null));
		var titleElement = (0, _componentTypes.getFirst)(props, Title);
		var titleChildren = (0, _get3.default)(titleElement, 'props.children');
		var bodyElement = (0, _componentTypes.getFirst)(props, Body);
		var bodyChildren = (0, _get3.default)(bodyElement, 'props.children', null);

		return _react2.default.createElement(
			'div',
			_extends({}, (0, _componentTypes.omitProps)(passThroughs, LoadingMessage), {
				className: cx('&', { '&-no-content': (0, _isNull3.default)(titleChildren) && !bodyChildren }, className)
			}),
			iconChildren,
			!(0, _isNull3.default)(titleChildren) && _react2.default.createElement(
				'h3',
				{ className: cx('&-title') },
				titleChildren || defaultTitle
			),
			bodyChildren && _react2.default.createElement(
				'span',
				{ className: cx('&-body') },
				bodyChildren
			)
		);
	}
});

exports.default = LoadingMessage;