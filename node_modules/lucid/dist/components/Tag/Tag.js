'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _isEmpty2 = require('lodash/isEmpty');

var _isEmpty3 = _interopRequireDefault(_isEmpty2);

var _noop2 = require('lodash/noop');

var _noop3 = _interopRequireDefault(_noop2);

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _styleHelpers = require('../../util/style-helpers');

var _CrossIcon = require('../Icon/CrossIcon/CrossIcon');

var _CrossIcon2 = _interopRequireDefault(_CrossIcon);

var _componentTypes = require('../../util/component-types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _styleHelpers.lucidClassNames.bind('&-Tag');

var bool = _propTypes2.default.bool,
    func = _propTypes2.default.func,
    node = _propTypes2.default.node,
    string = _propTypes2.default.string;

/**
 * {"categories": ["communication"]}
 *
 * Organizes items into removable items or groups. Can be nested to facilitate
 * grouping.
 */

var Tag = (0, _componentTypes.createClass)({
	displayName: 'Tag',

	propTypes: {
		/**
   * Shows or hides the little "x" for a given tag.
   */
		isRemovable: bool,
		/**
   * Called when the user clicks to remove a tag.
   *
   * Signature: `({props, event}) => {}`
   */
		onRemove: func,
		/**
   * Can contain elements or nested `Tag` components.
   */
		children: node,
		/**
   * Appended to the component-specific class names set on the root element.
   */
		className: string
	},

	getDefaultProps: function getDefaultProps() {
		return {
			onRemove: _noop3.default
		};
	},
	handleRemove: function handleRemove(event) {
		this.props.onRemove({ props: this.props, event: event });
	},
	render: function render() {
		var _props = this.props,
		    isRemovable = _props.isRemovable,
		    children = _props.children,
		    className = _props.className,
		    passThroughs = _objectWithoutProperties(_props, ['isRemovable', 'children', 'className']);

		var subTags = (0, _componentTypes.filterTypes)(children, Tag);
		var otherChildren = (0, _componentTypes.rejectTypes)(children, Tag);
		var isLeaf = (0, _isEmpty3.default)(subTags);

		return _react2.default.createElement(
			'div',
			_extends({}, (0, _componentTypes.omitProps)(passThroughs, Tag), {
				className: cx('&', { '&-leaf': isLeaf }, className)
			}),
			_react2.default.createElement(
				'div',
				{ className: cx('&-inner') },
				_react2.default.createElement(
					'div',
					{ className: cx('&-inner-content') },
					!(0, _isEmpty3.default)(otherChildren) ? _react2.default.createElement(
						'span',
						{ className: cx('&-inner-children') },
						otherChildren
					) : null,
					isRemovable ? _react2.default.createElement(
						'span',
						{ className: cx('&-remove'), onClick: this.handleRemove },
						_react2.default.createElement(_CrossIcon2.default, {
							className: cx('&-remove-button'),
							size: 10,
							viewBox: '4 4 8 8',
							isClickable: true
						})
					) : null
				),
				!isLeaf ? _react2.default.createElement(
					'div',
					{ className: cx('&-subgroup') },
					subTags
				) : null
			)
		);
	}
});

exports.default = Tag;