'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lucidClassNames = exports.NAMESPACE = undefined;

var _assign2 = require('lodash/assign');

var _assign3 = _interopRequireDefault(_assign2);

var _map2 = require('lodash/map');

var _map3 = _interopRequireDefault(_map2);

exports.bindClassNames = bindClassNames;

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * bindClassNames
 *
 * Returns a version of the `classnames` functions where `&` is bound to a given
 * value. The returned functions can be further bound to more specific values for
 * `&` which allows your bound classnames to look closer to style selector.
 *
 * Examples:
 *   bindClassNames('lucid')('&-Button') === 'lucid-Button'
 *   bindClassNames('lucid').bind('&-Button')('&-active') === 'lucid-Button-active'
 */
function bindClassNames() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var variable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /&/g;

  function cx() {
    return (0, _map3.default)(_classnames2.default.apply(undefined, arguments).split(' '), function (className) {
      return className.replace(variable, value);
    }).join(' ');
  }

  return (0, _assign3.default)(cx, {
    bind: function bind() {
      var nextValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : value;

      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      return bindClassNames.apply(undefined, [nextValue.replace(variable, value)].concat(args));
    }
  });
}

var NAMESPACE = exports.NAMESPACE = 'lucid';

/**
 * Exports a lucid-bound version of classnames, which can be make more specific
 * to a component.
 *
 * Example:
 *   const cx = lucidClassNames.bind('&-Button')
 *
 *   cx('&',{
 *     '&-active': true
 *   }, ['custom-classname']) === 'lucid-Button lucid-Button-active custom-classname'
 */
var lucidClassNames = exports.lucidClassNames = bindClassNames(NAMESPACE);